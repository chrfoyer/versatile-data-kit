# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0
from datetime import datetime

from vdk.internal.builtin_plugins.ingestion.source.auto_generated import (
    AutoGeneratedDataSource,
)
from vdk.internal.builtin_plugins.ingestion.source.auto_generated import (
    AutoGeneratedDataSourceConfiguration,
)
from vdk.internal.builtin_plugins.ingestion.source.auto_generated import (
    AutoGeneratedDataSourceStream,
)
from vdk.internal.builtin_plugins.ingestion.source.state import InMemoryDataSourceState


def test_in_memory_data_source_state():
    state = InMemoryDataSourceState()
    state.write({"key": "value"})
    assert state.read() == {"key": "value"}


def test_in_memory_data_source_stream():
    config = AutoGeneratedDataSourceConfiguration(
        num_records=3, include_metadata=True, num_streams=1
    )
    stream = AutoGeneratedDataSourceStream(config, 1)
    records = list(stream.read())
    assert len(records) == 3
    for record in records:
        assert "id" in record.data
        assert "name" in record.data
        assert "stream" in record.data
        assert "timestamp" in record.metadata
        assert isinstance(record.metadata["timestamp"], datetime)


def test_data_source_plugin():
    config = AutoGeneratedDataSourceConfiguration(
        num_records=3, include_metadata=True, num_streams=2
    )
    state = InMemoryDataSourceState()
    data_source = AutoGeneratedDataSource()

    data_source.connect(config, state)
    streams = data_source.streams()
    assert len(streams) == 2

    for i, stream in enumerate(streams):
        records = list(stream.read())
        assert len(records) == 3
        for record in records:
            assert "id" in record.data
            assert "name" in record.data
            assert record.data["stream"] == i
            assert "timestamp" in record.metadata

    data_source.disconnect()
    assert len(data_source.streams()) == 0
